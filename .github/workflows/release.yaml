name: SemVer Release Workflow

run-name: "Releasing ${{ github.event.repository.name }} #${{github.run_number}} -- ${{inputs.modules}}"

# Trigger workflow manually
on:
  workflow_dispatch:
    inputs:
      modules:
       type: choice
       description: Module
       required: true
       options:
        - --SELECT--
        - data-properties
        - tinkar-example-data-properties
        - snomedct-data-properties

env:
  BRANCH_NAME: ${{ github.ref_name }}
  TRUNK_BRANCH_NAME: ${{ github.event.repository.default_branch }}
  MODULE: ${{inputs.modules == 'data-properties' && '.' || inputs.modules}}
  TIMESTAMP_VERSION: ${{inputs.modules == 'snomedct-data-properties' && 'true' || 'false'}}

jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    if: github.repository_owner == 'ikmdev'
    steps:
      - name: Verify Module Selection
        if: inputs.modules == '-- SELECT --'
        run: |
          echo "ERROR: Please pick a correct module from the selection"
          exit 1
          
      - name: Verify Branch
        if: env.BRANCH_NAME != env.TRUNK_BRANCH_NAME
        run: |
          echo "ERROR: Attempting to release from branch ${{ env.BRANCH_NAME }}. Release from ${{ env.TRUNK_BRANCH_NAME }} branch only."
          exit 1

      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{secrets.IKMDEVOPS_PAT_TOKEN}}
  
      - name: Shared Release Action (semantic versioning)
        uses: ikmdev/maven-semver-release-action@v2.6.0
        if: ${{ env.TIMESTAMP_VERSION != 'true' }}
        with:
          working_directory: ${{ env.MODULE }}
          github_token: ${{secrets.GITHUB_TOKEN}}

      - name: Shared Release Action (timestamp versioning)
        uses: ikmdev/maven-semver-release-action@v2.6.0
        if: ${{ env.TIMESTAMP_VERSION == 'true' }}
        with:
          working_directory: ${{ env.MODULE }}
          ikmdevops_pat: ${{secrets.IKMDEVOPS_PAT_TOKEN}}
          github_token: ${{secrets.GITHUB_TOKEN}}
          ossrh_username: ${{secrets.OSSRH_TOKEN_USER}}
          ossrh_token: ${{secrets.OSSRH_TOKEN_PASS}}
          gpg_key: ${{secrets.GPG_KEY}}
          gpg_passphrase: ${{secrets.GPG_PASSPHRASE}}
          release_version: "\\${timestamp-versioning-prefix}-${maven.build.timestamp}"
          development_version: "\\${timestamp-versioning-prefix}-${maven.build.timestamp}-SNAPSHOT"
